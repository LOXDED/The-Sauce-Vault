// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rvL4Z2jyAqe3umzZYo5sfv
// Component: d1s2yXRyawJW
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: -zE89ucLXzyA/component
import Price from "../../Price"; // plasmic-import: jZZPF5im_0Lf/component
import Separator from "../../Separator"; // plasmic-import: jr7ZL1lPW1Rq/component
import Button from "../../Button"; // plasmic-import: 98uZdJHb8ovP/component
import ProductCard from "../../ProductCard"; // plasmic-import: CUCpwfWcus3T/component
import Footer from "../../Footer"; // plasmic-import: QMRL2OPgGfRX/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: _KXZ2ScVpJRX/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_ecommerce_starter.module.css"; // plasmic-import: rvL4Z2jyAqe3umzZYo5sfv/projectcss
import * as sty from "./PlasmicItemDrippy.module.css"; // plasmic-import: d1s2yXRyawJW/css
import Icon26Icon from "./icons/PlasmicIcon__Icon26"; // plasmic-import: CqB5kk-mGApX/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: CKjW5Umf2yTn/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: jhfGv_-XMeYa/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: 1rSudMLaBqpG/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: PIiokDHdfeaA/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: GtlGcf4PbO_T/icon
import Icon20Icon from "./icons/PlasmicIcon__Icon20"; // plasmic-import: sD_a7Zz1NElJ/icon

export const PlasmicItemDrippy__VariantProps = new Array();

export const PlasmicItemDrippy__ArgProps = new Array(
  "container42",
  "children4",
  "children24",
  "children224",
  "children2224",
  "children22224",
  "children222223"
);

function PlasmicItemDrippy__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{"Item"}</title>
        <meta key="og:title" property="og:title" content={"Item"} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={
            "Nunc parturient ultricies condimentum parturient sagittis urna mus conubia himenaeos fermentum leo mus dignissim pulvinar blandit porta eget ad."
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <NavBar
            data-plasmic-name={"navBar"}
            data-plasmic-override={overrides.navBar}
            className={classNames("__wab_instance", sty.navBar)}
          />

          <section className={classNames(defaultcss.all, sty.section__pt6Xr)}>
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
            ) ? (
              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__xyTa)}
                role={"img"}
              />
            ) : null}

            <p.Stack
              as={"div"}
              data-plasmic-name={"container4322"}
              data-plasmic-override={overrides.container4322}
              hasGap={true}
              className={classNames(defaultcss.all, sty.container4322)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__vzdj7)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__hDtA)}
                    role={"img"}
                    src={
                      "/plasmic/ecommerce_starter/images/untitledDrawing10Png.png"
                    }
                  />
                ) : null}
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox___9Xu3I)}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox___67J7J
                )}
              >
                {"LOXDED - Drippy One Shot Kit"}
              </div>

              <Price
                data-plasmic-name={"price"}
                data-plasmic-override={overrides.price}
                className={classNames("__wab_instance", sty.price)}
                price={
                  <React.Fragment>
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__i6JRd
                      )}
                    >
                      {"$"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__ooqjn
                      )}
                    >
                      {"00"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__eCgDm
                      )}
                    >
                      {".00"}
                    </div>
                  </React.Fragment>
                }
              />

              <Separator
                className={classNames("__wab_instance", sty.separator__cflbd)}
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__xLeYd)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__lpcQs)}
                >
                  <Button
                    colors={"lightGrayOutline"}
                    icons={"only"}
                    size={"large"}
                    slot={"Add to cart"}
                  >
                    <Icon26Icon
                      className={classNames(defaultcss.all, sty.svg___69POj)}
                      role={"img"}
                    />
                  </Button>
                </p.Stack>

                <Button
                  className={classNames("__wab_instance", sty.button__k5Fl7)}
                  colors={"lightGrayOutline"}
                  icons={"none"}
                  link2={
                    "https://www.toneden.io/loxded/post/loxded-drippy-one-shot-kit"
                  }
                  size={"large"}
                  slot={
                    <React.Fragment>
                      <Icon4Icon
                        className={classNames(defaultcss.all, sty.svg___1E85G)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__a3Tua
                        )}
                      >
                        {"Purchase"}
                      </div>
                    </React.Fragment>
                  }
                >
                  {true ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg___8YWr5)}
                      role={"img"}
                    />
                  ) : null}
                </Button>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__iB9J)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__smkJt
                  )}
                >
                  {"Description"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__xvIRf
                  )}
                >
                  {
                    'The "Drippy" One Shot Kit by LOXDED comes with 100+ premium quality WAV files to level up your melodies instantly. Inspired by producers like Metro Boomin, Pvlace, Cubeatz, etc, your beats will deliver with professional quality.\n\n- 34 Keys\n- 21 Bells & Mallets\n- 21 Synths\n- 6 plucks\n- 10 guitars\n- 10 pads'
                  }
                </div>
              </p.Stack>

              <Separator
                className={classNames("__wab_instance", sty.separator__puQud)}
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__barN)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__kRKvP
                  )}
                >
                  {"Details"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__rHfvb
                  )}
                >
                  {"102 WAV Files"}
                </div>

                <Separator
                  className={classNames(
                    "__wab_instance",
                    sty.separator___20C0J
                  )}
                />

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__u6LX6
                  )}
                >
                  {"265 MB"}
                </div>

                <Separator
                  className={classNames("__wab_instance", sty.separator___0Ick)}
                />

                <Separator
                  className={classNames("__wab_instance", sty.separator__kdul1)}
                />
              </p.Stack>
            </p.Stack>
          </section>

          <section className={classNames(defaultcss.all, sty.section__rUiVr)}>
            <div
              data-plasmic-name={"container42"}
              data-plasmic-override={overrides.container42}
              className={classNames(defaultcss.all, sty.container42)}
            >
              {p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__g3RD)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__dEz7W
                      )}
                    >
                      {"You may also like"}
                    </div>

                    <Button
                      children2={
                        <Icon5Icon
                          className={classNames(defaultcss.all, sty.svg__lJqD)}
                          role={"img"}
                        />
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.button__slDDj
                      )}
                      icons={"end"}
                      link={"link"}
                      slot={"See more"}
                    />
                  </div>
                ),

                value: args.container42
              })}
            </div>

            <div
              data-plasmic-name={"container5"}
              data-plasmic-override={overrides.container5}
              className={classNames(defaultcss.all, sty.container5)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__luolc)}
              >
                <ProductCard
                  image={p.renderPlasmicSlot({
                    defaultContents: (
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__gBvPz)}
                        role={"img"}
                        src={
                          "https://assets.adidas.com/images/h_840,f_auto,q_auto:sensitive,fl_lossy/1070aebbb55841e1aae5ac9f00b39879_9366/adidas_Ultraboost_DNA_x_LEGO(r)_Plates_Shoes_White_FY7690_01_standard.jpg"
                        }
                      />
                    ),

                    value: args.children4
                  })}
                  link={"http://google.com"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__pBkP7
                    )}
                  >
                    {"ADIDAS ULTRABOOST DNA X LEGO® PLATES SHOES"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__b9CyZ
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__ickqS
                  )}
                  image={p.renderPlasmicSlot({
                    defaultContents: (
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__byneh)}
                        role={"img"}
                        src={
                          "https://static.nike.com/a/images/t_PDP_864_v1/f_auto,b_rgb:f5f5f5,q_80/79d40e0b-da9d-4049-a4be-6a8fe7d9489e/air-zoom-pegasus-38-womens-running-shoe-2bvJvW.png"
                        }
                      />
                    ),

                    value: args.children24
                  })}
                  link={"/item"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__zgHu7
                    )}
                  >
                    {"Nike Air Zoom Pegasus 38"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__kmg2N
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__i9Ezn
                  )}
                  image={p.renderPlasmicSlot({
                    defaultContents: (
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__tVvLc)}
                        role={"img"}
                        src={
                          "https://assets.reebok.com/images/h_840,f_auto,q_auto:sensitive,fl_lossy/3108369a42714ba6a9c2aa99017b457a_9366/Club_C_85_Vintage_Men's_Shoes_White_V67899_01_standard.jpg"
                        }
                      />
                    ),

                    value: args.children224
                  })}
                  link={"/item"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__wUvkw
                    )}
                  >
                    {"Club C 85 Vintage Men's Shoes"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__jdf
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__pEga4
                  )}
                  image={p.renderPlasmicSlot({
                    defaultContents: (
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__dnP6A)}
                        role={"img"}
                        src={
                          "https://static.nike.com/a/images/t_PDP_864_v1/f_auto,b_rgb:f5f5f5,q_80/b13d4f77-9404-492f-b2c8-5f06419f2cb6/air-max-genome-mens-shoe-hgsQFb.png"
                        }
                      />
                    ),

                    value: args.children2224
                  })}
                  link={"/item"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__yOkhL
                    )}
                  >
                    {"Nike Air Max Genome"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__qeiJs
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__y9Hcn
                  )}
                  image={p.renderPlasmicSlot({
                    defaultContents: (
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__vdpMa)}
                        role={"img"}
                        src={
                          "https://assets.adidas.com/images/h_840,f_auto,q_auto:sensitive,fl_lossy/cdfdf1409e054322b9e0ac6d011da5e2_9366/Ultraboost_DNA_1.0_Shoes_Green_H05264_01_standard.jpg"
                        }
                      />
                    ),

                    value: args.children22224
                  })}
                  link={"/item"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__qBwXt
                    )}
                  >
                    {"ULTRABOOST DNA 1.0 SHOES"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__wb0Jr
                    )}
                  >
                    {"If you can dream it, you can build it."}
                  </div>
                </ProductCard>

                <ProductCard
                  className={classNames(
                    "__wab_instance",
                    sty.productCard__sqWtU
                  )}
                  image={p.renderPlasmicSlot({
                    defaultContents: (
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img___4SGz)}
                        role={"img"}
                        src={
                          "https://static.nike.com/a/images/t_PDP_864_v1/f_auto,b_rgb:f5f5f5,q_80/f6cbde42-eed6-42bd-b5d9-1b5bef129618/zion-1-big-kids-shoe-BsvRq7.png"
                        }
                      />
                    ),

                    value: args.children222223
                  })}
                  link={"/item"}
                />
              </p.Stack>
            </div>
          </section>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
            container432={
              <React.Fragment>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__n3JcM)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__bnU8E
                    )}
                  >
                    {"Subscribe"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__cwH3O
                    )}
                  >
                    {
                      "Sign up for exclusive offers, original stories, activism, events and more."
                    }
                  </div>

                  <input
                    data-plasmic-name={"textbox"}
                    data-plasmic-override={overrides.textbox}
                    className={classNames(defaultcss.input, sty.textbox)}
                    placeholder={"Email address…"}
                    size={1}
                    type={"text"}
                    value={""}
                  />

                  <Button
                    className={classNames("__wab_instance", sty.button___7FpLj)}
                    colors={"black"}
                    icons={"none"}
                    slot={"Sign me up"}
                  />
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__qWeF)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___9Utzq
                    )}
                  >
                    {"Help"}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__jrXl)}
                  >
                    <Button slot={"Order status"}>
                      <Icon22Icon
                        className={classNames(defaultcss.all, sty.svg__pySxw)}
                        role={"img"}
                      />
                    </Button>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__cl2AO
                      )}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox___8Hrv
                          )}
                        >
                          {"Returns and exchanges"}
                        </div>
                      }
                    >
                      <Icon21Icon
                        className={classNames(defaultcss.all, sty.svg__rwKD)}
                        role={"img"}
                      />
                    </Button>

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__sngwz
                      )}
                      slot={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.freeBox__apSH
                          )}
                        >
                          {"Help center"}
                        </div>
                      }
                    >
                      <Icon20Icon
                        className={classNames(defaultcss.all, sty.svg__ujbzT)}
                        role={"img"}
                      />
                    </Button>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__ah0YP)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__cjoWt
                    )}
                  >
                    {"More info"}
                  </div>

                  <div
                    className={classNames(defaultcss.all, sty.freeBox__wg3Z9)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__d5WU1)}
                    >
                      <Button icons={"none"} slot={"Gift cards"} />

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__ddoTr
                        )}
                        icons={"none"}
                        slot={"Find a store"}
                      />

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__gC9AJ
                        )}
                        icons={"none"}
                        slot={"Careers"}
                      />

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__vId8
                        )}
                        icons={"none"}
                        slot={"Sitemap"}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.freeBox__yQpud)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__bUmiZ
                        )}
                        icons={"none"}
                        slot={"Group sales"}
                      />

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__yf9Q6
                        )}
                        icons={"none"}
                        slot={"Privacy policy"}
                      />

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__sxEe7
                        )}
                        icons={"none"}
                        slot={"Contact us"}
                      />
                    </p.Stack>
                  </div>
                </p.Stack>
              </React.Fragment>
            }
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navBar",
    "container4322",
    "price",
    "container42",
    "container5",
    "footer",
    "textbox"
  ],

  navBar: ["navBar"],
  container4322: ["container4322"],
  price: ["price"],
  container42: ["container42"],
  container5: ["container5"],
  footer: ["footer", "textbox"],
  textbox: ["textbox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicItemDrippy__ArgProps,
      internalVariantPropNames: PlasmicItemDrippy__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicItemDrippy__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicItemDrippy";
  } else {
    func.displayName = `PlasmicItemDrippy.${nodeName}`;
  }
  return func;
}

export const PlasmicItemDrippy = Object.assign(
  // Top-level PlasmicItemDrippy renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    container4322: makeNodeComponent("container4322"),
    price: makeNodeComponent("price"),
    container42: makeNodeComponent("container42"),
    container5: makeNodeComponent("container5"),
    footer: makeNodeComponent("footer"),
    textbox: makeNodeComponent("textbox"),
    // Metadata about props expected for PlasmicItemDrippy
    internalVariantProps: PlasmicItemDrippy__VariantProps,
    internalArgProps: PlasmicItemDrippy__ArgProps
  }
);

export default PlasmicItemDrippy;
/* prettier-ignore-end */
