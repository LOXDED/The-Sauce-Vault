// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rvL4Z2jyAqe3umzZYo5sfv
// Component: QMRL2OPgGfRX
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: 98uZdJHb8ovP/component
import CopyrightSocialLanguage from "../../CopyrightSocialLanguage"; // plasmic-import: 2eyTYjcUhLYG/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: _KXZ2ScVpJRX/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_ecommerce_starter.module.css"; // plasmic-import: rvL4Z2jyAqe3umzZYo5sfv/projectcss
import * as sty from "./PlasmicFooter.module.css"; // plasmic-import: QMRL2OPgGfRX/css
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: PIiokDHdfeaA/icon
import Icon21Icon from "./icons/PlasmicIcon__Icon21"; // plasmic-import: GtlGcf4PbO_T/icon
import Icon20Icon from "./icons/PlasmicIcon__Icon20"; // plasmic-import: sD_a7Zz1NElJ/icon
import Icon27Icon from "./icons/PlasmicIcon__Icon27"; // plasmic-import: U2eQ6RsLNYug/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: irD0DWuLYo36/icon
import Icon29Icon from "./icons/PlasmicIcon__Icon29"; // plasmic-import: 4mxDUdDlF0wz/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: GiCdvIrqgjJ6/icon

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array("container432");

function PlasmicFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"container432"}
        data-plasmic-override={overrides.container432}
        hasGap={true}
        className={classNames(defaultcss.all, sty.container432)}
      >
        {p.renderPlasmicSlot({
          defaultContents: (
            <React.Fragment>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__vwvx0)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__dWPgZ
                  )}
                >
                  {"Subscribe"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___6Sm1
                  )}
                >
                  {
                    "Sign up for exclusive offers, original stories, activism, events and more."
                  }
                </div>

                <input
                  className={classNames(defaultcss.input, sty.textbox__eqED)}
                  placeholder={"Email address…"}
                  size={1}
                  type={"text"}
                  value={""}
                />

                <Button
                  className={classNames("__wab_instance", sty.button__xmTud)}
                  colors={"black"}
                  icons={"none"}
                  slot={"Sign me up"}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__cN6D8)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__to6Lb
                  )}
                >
                  {"Help"}
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__a2EaN)}
                >
                  <Button slot={"Order status"}>
                    <Icon22Icon
                      className={classNames(defaultcss.all, sty.svg__rTts)}
                      role={"img"}
                    />
                  </Button>

                  <Button
                    className={classNames("__wab_instance", sty.button__qyeM)}
                    slot={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__otnnw
                        )}
                      >
                        {"Returns and exchanges"}
                      </div>
                    }
                  >
                    <Icon21Icon
                      className={classNames(defaultcss.all, sty.svg__vI1Qn)}
                      role={"img"}
                    />
                  </Button>

                  <Button
                    className={classNames("__wab_instance", sty.button__wisQi)}
                    slot={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___5WoGf
                        )}
                      >
                        {"Help center"}
                      </div>
                    }
                  >
                    <Icon20Icon
                      className={classNames(defaultcss.all, sty.svg__aMdD6)}
                      role={"img"}
                    />
                  </Button>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox___6Ow0F)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__a20VU
                  )}
                >
                  {"More info"}
                </div>

                <div className={classNames(defaultcss.all, sty.freeBox__urEeL)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox___7CwGf)}
                  >
                    <Button icons={"none"} slot={"Gift cards"} />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__lDEeW
                      )}
                      icons={"none"}
                      slot={"Find a store"}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__kqJ4Z
                      )}
                      icons={"none"}
                      slot={"Careers"}
                    />

                    <Button
                      className={classNames("__wab_instance", sty.button__rOkB)}
                      icons={"none"}
                      slot={"Sitemap"}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox___61M61)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ayTXk
                      )}
                      icons={"none"}
                      slot={"Group sales"}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__dJ8Eo
                      )}
                      icons={"none"}
                      slot={"Privacy policy"}
                    />

                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___0E4Gz
                      )}
                      icons={"none"}
                      slot={"Contact us"}
                    />
                  </p.Stack>
                </div>
              </p.Stack>
            </React.Fragment>
          ),

          value: args.container432
        })}
      </p.Stack>

      <CopyrightSocialLanguage
        data-plasmic-name={"copyrightSocialLanguage"}
        data-plasmic-override={overrides.copyrightSocialLanguage}
        className={classNames("__wab_instance", sty.copyrightSocialLanguage)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox__icZ31)}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.freeBox__rgXqj
            )}
          >
            {"© 2021 The Sauce Vault, Inc. All Rights Reserved."}
          </div>

          <div className={classNames(defaultcss.all, sty.freeBox__eNtJ0)}>
            {true ? (
              <Button
                className={classNames("__wab_instance", sty.button__lc6DM)}
                icons={"only"}
                link2={"http://twitter.com"}
              >
                <Icon27Icon
                  className={classNames(defaultcss.all, sty.svg___77VFf)}
                  role={"img"}
                />
              </Button>
            ) : null}

            <Button
              className={classNames("__wab_instance", sty.button__zbpeh)}
              icons={"only"}
              link2={
                "https://www.youtube.com/channel/UCatorRGa-e2OckJJaHMdbtw/videos"
              }
            >
              <Icon28Icon
                className={classNames(defaultcss.all, sty.svg__wlprU)}
                role={"img"}
              />
            </Button>

            {true ? (
              <Button
                className={classNames("__wab_instance", sty.button__khatg)}
                icons={"only"}
                link2={"http://pinterest.com"}
              >
                <Icon29Icon
                  className={classNames(defaultcss.all, sty.svg__p8Dqz)}
                  role={"img"}
                />
              </Button>
            ) : null}
          </div>
        </p.Stack>

        <Button
          children2={
            <Icon15Icon
              className={classNames(defaultcss.all, sty.svg___7Ee1D)}
              role={"img"}
            />
          }
          className={classNames("__wab_instance", sty.button__chF5N)}
          icons={"end"}
          slot={"English"}
        >
          <Icon15Icon
            className={classNames(defaultcss.all, sty.svg___0OPn)}
            role={"img"}
          />
        </Button>
      </CopyrightSocialLanguage>
    </section>
  );
}

const PlasmicDescendants = {
  root: ["root", "container432", "copyrightSocialLanguage"],
  container432: ["container432"],
  copyrightSocialLanguage: ["copyrightSocialLanguage"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    container432: makeNodeComponent("container432"),
    copyrightSocialLanguage: makeNodeComponent("copyrightSocialLanguage"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
